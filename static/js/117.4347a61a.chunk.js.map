{"version":3,"file":"static/js/117.4347a61a.chunk.js","mappings":"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","sources":["webpack://br-frontend/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://br-frontend/./src/components/Chart/Chart.module.css?6073","components/Chart/Chart.jsx","webpack://br-frontend/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://br-frontend/./src/components/MyGoals/MyGoals.module.css?b621","components/MyGoals/MyGoals.jsx","helpers/getTrainingDaysAmount.js","helpers/stringMax.js","helpers/useIsMobile.js","services/hooks/useCountdown.js","webpack://br-frontend/./src/components/CountdownTimers/CountdownTimers.module.css?0d94","components/CountdownTimers/CountdownTimers.jsx","components/DatePicker.jsx","components/modals/DoingFineModal/sprite.svg","webpack://br-frontend/./src/components/modals/DoingFineModal/DoingFineModal.module.css?14a5","components/modals/DoingFineModal/DoingFineModal.jsx","components/AddResult/sprite.svg","webpack://br-frontend/./src/components/AddResult/AddResult.module.css?1321","components/AddResult/AddResult.jsx","webpack://br-frontend/./src/components/StatisticsList/StatisticsList.module.css?d2fb","components/StatisticsList/StatisticsList.jsx","webpack://br-frontend/./src/components/StatisticsList/StatisticsListMobile/StatisticsListMobile.module.css?fb2b","components/StatisticsList/StatisticsListMobile/StatisticsListMobile.jsx","webpack://br-frontend/./src/components/modals/TrainingExecutedModal/TrainingExecutedModal.module.css?6479","components/modals/TrainingExecutedModal/TrainingExecutedModal.jsx","services/calculateStatistics.js","webpack://br-frontend/./src/views/StatisticView/StatisticView.module.css?9968","views/StatisticView/StatisticView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Button_main__uCMI5\",\"transparent\":\"Button_transparent__33FBX Button_main__uCMI5\"};","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({\n  className,\n  type = 'button',\n  text,\n  onClick,\n  disabled = false,\n  tabIndex,\n  autoFocus,\n}) => {\n  return (\n    <button\n      className={`${s[className]}`}\n      type={type}\n      onClick={onClick ? onClick : null}\n      disabled={disabled}\n      tabIndex={tabIndex}\n      autoFocus={autoFocus}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.oneOf(['main', 'transparent']),\n  type: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Chart_container__F837V\",\"chart__title\":\"Chart_chart__title__2Sd6S\",\"trainigPlan__title\":\"Chart_trainigPlan__title__pR5-M\"};","import { useTranslation } from 'react-i18next';\nimport s from './Chart.module.css';\n\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst customLegend = t => {\n  const legend = {\n    id: 'customLegend',\n    afterDraw: (chart, args, options) => {\n      const { _metasets, ctx } = chart;\n      let x, y;\n      ctx.font = 'bold 12px Montserat';\n      ctx.textBaseLine = 'middle';\n      ctx.textAlign = 'center';\n\n      _metasets.forEach(meta => {\n        ctx.fillStyle = meta._dataset.borderColor;\n\n        x = meta.data[meta.data.length - 1].x - meta._dataset.label.length * 5;\n        y = meta.data[meta.data.length - 1].y - 10;\n\n        ctx.fillText(meta._dataset.label, x, y);\n      });\n      ctx.fillStyle = '#091E3F';\n      ctx.fillText(t('statistics.time'), x, chart.chartArea.height + 23);\n    },\n  };\n  return legend;\n};\n\nexport const Chart = ({ plan, readingStatistics }) => {\n  const { t } = useTranslation();\n  const dates = readingStatistics.map(stat => stat.date);\n  //console.log('dates', dates);\n  const pages = readingStatistics.map(stat => stat.pageAmount);\n  //console.log('pages', pages);\n  let actPages = pages.length === 1 ? [...pages, ...pages] : pages;\n\n  let maxPagesValue = Math.max(...actPages);\n  //console.log('Max page value', maxPagesValue);\n  let labels = [plan, plan];\n\n  if (dates.length === 1) {\n    labels = [...dates, ...dates];\n  }\n  if (dates.length > 1) {\n    labels = dates;\n  }\n  //console.log('labels', labels);\n  let maxChartValue =\n    plan * 2 > maxPagesValue\n      ? plan * 2\n      : (maxPagesValue += maxPagesValue * 0.1);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: { padding: { bottom: 20 } },\n    plugins: {\n      legend: { display: false },\n    },\n    scales: {\n      x: { ticks: { display: false } },\n      y: {\n        min: plan === 0 ? -5 : 1,\n        max: plan === 0 ? 5 : maxChartValue,\n        ticks: { display: false },\n        grid: { display: false },\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: t('statistics.plan'),\n        data:\n          actPages.length > 0 ? [...actPages.map(item => plan)] : [plan, plan],\n\n        backgroundColor: '#F5F7FA',\n        borderColor: 'rgb(0, 0, 0)',\n        pointBorderColor: 'rgb(0, 0, 0)',\n        pointBorderWidth: 4,\n      },\n    ],\n  };\n\n  if (actPages.length > 0) {\n    data.datasets.push({\n      label: 'ACT',\n      data: actPages,\n      backgroundColor: '#F5F7FA',\n      borderColor: '#FF6B08',\n      pointBorderColor: '#FF6B08',\n      pointBorderWidth: 4,\n      tension: 0.3,\n    });\n  }\n\n  return (\n    <div className={s.container}>\n      <p className={s.chart__title}>\n        {t('statistics.amountPagesDay')}\n        <span className={s.trainigPlan__title}>{plan}</span>\n      </p>\n      <Line options={options} data={data} plugins={[customLegend(t)]} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__DJDMv\",\"overlay\":\"Modal_overlay__r63M6\"};","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst ModalWrapper = ({ open, onClose, children }) => {\n  const modalRef = useRef(document.getElementById('modal-root'));\n  useEffect(() => {\n    const handleClose = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleClose);\n    return () => {\n      window.removeEventListener('keydown', handleClose);\n    };\n  }, [onClose]);\n\n  const handleCloseClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n  return (\n    open &&\n    createPortal(\n      <div className={styles.overlay} onClick={handleCloseClick}>\n        <div className={styles.modal}>{children}</div>\n      </div>,\n      modalRef.current\n    )\n  );\n};\n\nModalWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ModalWrapper;\n","// extracted by mini-css-extract-plugin\nexport default {\"containerTwoGoals\":\"MyGoals_containerTwoGoals__01LkU\",\"containerThreeGoals\":\"MyGoals_containerThreeGoals__1EOIQ MyGoals_containerTwoGoals__01LkU MyGoals_containerTwoGoals__01LkU\",\"allTwoGoals\":\"MyGoals_allTwoGoals__BdKM6\",\"allThreeGoals\":\"MyGoals_allThreeGoals__RIe0G MyGoals_allTwoGoals__BdKM6\",\"twoGoals\":\"MyGoals_twoGoals__5FwJw\",\"threeGoals\":\"MyGoals_threeGoals__J44wd\"};","import { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport s from './MyGoals.module.css';\n\nconst TwoGoals = ({ header, amount }) => {\n  return (\n    <div className={s.twoGoals}>\n      <p>{amount}</p>\n      <h4>{header}</h4>\n    </div>\n  );\n};\n\nconst ThreeGoals = ({ header, amount }) => {\n  return (\n    <div className={s.threeGoals}>\n      <p>{amount}</p>\n      <h4>{header}</h4>\n    </div>\n  );\n};\n\nconst MyGoals = ({\n  bookAmount = 0,\n  daysAmount = 0,\n  booksLeft = 0,\n  showBooksLeft = false,\n}) => {\n  const { t } = useTranslation();\n  const container = booksLeft > 0 ? 'containerThreeGoals' : 'containerTwoGoals';\n  const allGoals = showBooksLeft ? 'allThreeGoals' : 'allTwoGoals';\n\n  return (\n    <div className={s[container]}>\n      <h2>{t('training.myGoals')}</h2>\n      <div className={s[allGoals]}>\n        {showBooksLeft ? (\n          <>\n            <ThreeGoals header={t('training.books')} amount={bookAmount} />\n            <ThreeGoals header={t('training.days')} amount={daysAmount} />\n            <ThreeGoals header={t('training.booksLeft')} amount={booksLeft} />\n          </>\n        ) : (\n          <>\n            <TwoGoals header={t('training.books')} amount={bookAmount} />\n            <TwoGoals header={t('training.days')} amount={daysAmount} />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nMyGoals.propTypes = {\n  bookAmount: PropTypes.number,\n  daysAmount: PropTypes.number,\n  booksLeft: PropTypes.number,\n  showBooksLeft: PropTypes.bool,\n};\n\nexport default MyGoals;\n","const getTrainingDaysAmount = (startDate, finishDate) => {\n  return Math.round(\n    (new Date(finishDate) - new Date(startDate)) / (60 * 60 * 24 * 1000)\n  );\n};\n\nexport default getTrainingDaysAmount;\n","const stringMax = (string, stringLength) => {\n  const stringStrip = string\n    .split(' ')\n    .filter(word => word)\n    .join(' ');\n\n  if (stringStrip.length > stringLength) {\n    const subStringStrip = stringStrip.substring(0, stringLength);\n\n    const newString = subStringStrip.substring(\n      0,\n      Math.max(\n        subStringStrip.lastIndexOf(' '),\n        subStringStrip.lastIndexOf(',') + 1\n      )\n    );\n    return newString + ' ...';\n  } else {\n    return stringStrip;\n  }\n};\n\nexport default stringMax;\n","import { useState, useEffect } from 'react';\n\nconst getIsMobile = () => window.innerWidth <= 767;\n\nfunction useIsMobile() {\n  const [isMobile, setIsMobile] = useState(getIsMobile());\n\n  useEffect(() => {\n    const onResize = () => {\n      setIsMobile(getIsMobile());\n    };\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n  return isMobile;\n}\n\nexport default useIsMobile;\n","import { useEffect, useState } from 'react';\n\nconst useCountdown = targetDate => {\n  const countDownDate = new Date(targetDate).getTime();\n\n  const [countDown, setCountDown] = useState(\n    countDownDate - new Date().getTime()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountDown(countDownDate - new Date().getTime());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [countDownDate]);\n\n  return getReturnValues(countDown);\n};\n\nconst getReturnValues = countDown => {\n  // calculate time left\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n  );\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\n\n  return [days, hours, minutes, seconds];\n};\n\nexport { useCountdown };\n","// extracted by mini-css-extract-plugin\nexport default {\"countdownTimers\":\"CountdownTimers_countdownTimers__65svO\",\"countdownTimer\":\"CountdownTimers_countdownTimer__fLLw2\",\"showCounter\":\"CountdownTimers_showCounter__92KaE\",\"countdown\":\"CountdownTimers_countdown__e4ucU\"};","import { useCountdown } from 'services/hooks/useCountdown';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport s from './CountdownTimers.module.css';\n\nconst DateTimeDisplay = ({ value, type }) => {\n  const minTwoDigits = value => {\n    return ('0' + value).slice(-2);\n  };\n\n  return (\n    <div className={s.countdown}>\n      <p>{minTwoDigits(value)}</p>\n      <span>{type}</span>\n    </div>\n  );\n};\n\nconst ShowCounter = ({ header, days, hours, minutes, seconds }) => {\n  const { t } = useTranslation();\n  return (\n    <div className={s.countdownTimer}>\n      <h3>{header}</h3>\n      <div className={s.showCounter}>\n        <DateTimeDisplay value={days} type={t('statistics.days')} />\n        <p>:</p>\n        <DateTimeDisplay value={hours} type={t('statistics.hrs')} />\n        <p>:</p>\n        <DateTimeDisplay value={minutes} type={t('statistics.mins')} />\n        <p>:</p>\n        <DateTimeDisplay value={seconds} type={t('statistics.secs')} />\n      </div>\n    </div>\n  );\n};\n\nconst CountdownTimers = ({ targetDate }) => {\n  const { t } = useTranslation();\n  const [\n    daysUntilNextYear,\n    hoursUntilNextYear,\n    minutesUntilNextYear,\n    secondsUntilNextYear,\n  ] = useCountdown(Date.parse(new Date(new Date().getFullYear() + 1, 0, 1)));\n  const [\n    daysUntilTargetDate,\n    hoursUntilTargetDate,\n    minutesUntilTargetDate,\n    secondsUntilTargetDate,\n  ] = useCountdown(targetDate);\n\n  return (\n    <div className={s.countdownTimers}>\n      <ShowCounter\n        header={t('statistics.yearsCountdown')}\n        days={daysUntilNextYear}\n        hours={hoursUntilNextYear}\n        minutes={minutesUntilNextYear}\n        seconds={secondsUntilNextYear}\n      />\n      <ShowCounter\n        header={t('statistics.goalsCountdown')}\n        days={\n          daysUntilTargetDate < 0\n            ? -1 * daysUntilTargetDate\n            : daysUntilTargetDate\n        }\n        hours={\n          hoursUntilTargetDate < 0\n            ? -1 * hoursUntilTargetDate\n            : hoursUntilTargetDate\n        }\n        minutes={\n          minutesUntilTargetDate < 0\n            ? -1 * minutesUntilTargetDate\n            : minutesUntilTargetDate\n        }\n        seconds={\n          secondsUntilTargetDate < 0\n            ? -1 * secondsUntilTargetDate\n            : secondsUntilTargetDate\n        }\n      />\n    </div>\n  );\n};\n\nCountdownTimers.propTypes = {\n  targetDate: PropTypes.string,\n};\n\nexport default CountdownTimers;\n","import { useField, useFormikContext } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst DatePickerField = ({ ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field] = useField(props);\n  return (\n    <DatePicker\n      {...field}\n      {...props}\n      selected={(field.value && new Date(field.value)) || null}\n      onChange={val => {\n        setFieldValue(field.name, val);\n      }}\n    />\n  );\n};\n\nexport default DatePickerField;\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-thumb_up\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#a6abb9\",\n    style: {\n      fill: \"var(--color1, #a6abb9)\"\n    },\n    d: \"M12 28h12c1.107 0 2.053-0.667 2.453-1.627l4.027-9.4c0.12-0.307 0.187-0.627 0.187-0.973v-2.667c0-1.467-1.2-2.667-2.667-2.667h-8.413l1.267-6.093 0.040-0.427c0-0.547-0.227-1.053-0.587-1.413l-1.413-1.4-8.787 8.787c-0.48 0.48-0.773 1.147-0.773 1.88v13.333c0 1.467 1.2 2.667 2.667 2.667zM12 12l5.787-5.787-1.787 7.12h12v2.667l-4 9.333h-12v-13.333zM1.333 12h5.333v16h-5.333v-16z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.ac6b92002578bf2eee8d8e944eec9102.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DoingFineModal_wrapper__oHZXm\",\"wrapper_svg\":\"DoingFineModal_wrapper_svg__t5wB+\",\"wrapper_text\":\"DoingFineModal_wrapper_text__rO6Sl\",\"buttons\":\"DoingFineModal_buttons__7qAtX\"};","import { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Modal from '../../Modal/Modal';\nimport Button from '../../Button/Button';\nimport sprite from './sprite.svg';\nimport s from './DoingFineModal.module.css';\n\nconst DoingFineModal = ({ open, onClose }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <div className={s.wrapper}>\n        <svg className={s.wrapper_svg}>\n          <use href={`${sprite}#icon-thumb_up`} />\n        </svg>\n        <p className={s.wrapper_text}>{t('statistics.wellDone')}</p>\n        <div className={s.buttons}>\n          <Button\n            text={t('modal.ok')}\n            className=\"main\"\n            onClick={onClose}\n            tabIndex={0}\n            autoFocus={true}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nDoingFineModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default DoingFineModal;\n","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Polygon\",\n    viewBox: \"0 0 69 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.667 32l-30.022-28h60.045l-30.022 28z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.f42120851c40e3eba5a3e0c92334d786.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AddResult_form__U0FlF\",\"title\":\"AddResult_title__6tx4a\",\"resultsWrapper\":\"AddResult_resultsWrapper__flA2D\",\"wrapper\":\"AddResult_wrapper__ewCKK\",\"button\":\"AddResult_button__U2YeA\",\"statisticsTitle\":\"AddResult_statisticsTitle__3pFEj\",\"iconSvg\":\"AddResult_iconSvg__ZUEQV\",\"fieldWrapper\":\"AddResult_fieldWrapper__hR3R1\",\"input\":\"AddResult_input__XbO5A\",\"error\":\"AddResult_error__khE7D\",\"statistics\":\"AddResult_statistics__vn51X\",\"name\":\"AddResult_name__343Jd\",\"item\":\"AddResult_item__qy6EO\",\"day\":\"AddResult_day__Ym6uC\",\"time\":\"AddResult_time__HOr4g\",\"pages\":\"AddResult_pages__rynsr\"};","import { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport DatePickerField from '../DatePicker';\nimport Button from 'components/Button/Button';\nimport DoingFineModal from 'components/modals/DoingFineModal/DoingFineModal';\nimport PropTypes from 'prop-types';\nimport sprite from './sprite.svg';\nimport s from './AddResult.module.css';\n\nconst AddResult = ({ data, updateResult }) => {\n  const { t } = useTranslation();\n\n  const {\n    goalPerDay: plan,\n    startDate,\n    finishDate,\n    readStatistics: results,\n    alreadyReadPages,\n    isTrainingExecuted,\n    trainingPagesAmount,\n  } = data;\n  const [doingFineModal, setDoingFineModal] = useState(false);\n\n  const onSubmit = (values, actions) => {\n    updateResult({\n      ...data,\n      trainingId: data._id,\n      readStatistics: [\n        ...data.readStatistics,\n        { dateTime: values.date, pageAmount: values.pages },\n      ],\n    });\n    if (\n      plan > values.pages &&\n      alreadyReadPages + values.pages < trainingPagesAmount\n    ) {\n      setDoingFineModal(true);\n    }\n    actions.resetForm();\n  };\n\n  const sortResults = [...results].sort(\n    (a, b) => new Date(b.dateTime) - new Date(a.dateTime)\n  );\n  const closeDoingFineModal = () => {\n    setDoingFineModal(false);\n  };\n\n  let schema = yup.object().shape({\n    pages: yup\n      .number()\n      .integer(t('validation.enterYear'))\n      .positive(t('validation.pagesMin'))\n      .min(1, t('validation.pagesMin1'))\n      .max(data.trainingPagesAmount, t('validation.pagesMore'))\n      .required(t('validation.fillPages'))\n      .typeError(t('validation.pages1000')),\n  });\n  return (\n    <>\n      <Formik\n        initialValues={{ date: new Date(), pages: '' }}\n        validationSchema={schema}\n        onSubmit={onSubmit}\n      >\n        {({ values, isValid }) => (\n          <Form className={s.form}>\n            <h2 className={s.title}>{t('statistics.result')}</h2>\n            <div className={s.resultsWrapper}>\n              <div className={s.wrapper}>\n                <div className={s.fieldWrapper}>\n                  <label className={s.name}>{t('statistics.date')}</label>\n                  <DatePickerField\n                    name=\"date\"\n                    className={s.input}\n                    minDate={new Date(startDate)}\n                    maxDate={new Date(finishDate)}\n                    dateFormat=\"dd-MM-yyyy\"\n                    placeholderText=\"Choose date\"\n                    autoComplete=\"off\"\n                    readonly={true}\n                    required\n                  />\n\n                  <svg className={s.iconSvg} style={{ width: '24px' }}>\n                    <use href={`${sprite}#icon-Polygon`}></use>\n                  </svg>\n                </div>\n                <div className={s.fieldWrapper}>\n                  <label className={s.name}>\n                    {t('statistics.amountPages')}\n                  </label>\n\n                  <Field className={s.input} type=\"number\" name=\"pages\" />\n                  <span className={s.error}>\n                    <ErrorMessage name=\"pages\" />\n                  </span>\n                </div>\n              </div>\n              <div className={s.button}>\n                <Button\n                  type=\"submit\"\n                  disabled={!isValid || isTrainingExecuted}\n                  className=\"main\"\n                  text={t('statistics.addResult')}\n                />\n              </div>\n            </div>\n            <h2 className={s.statisticsTitle}>{t('statistics.statistics')}</h2>\n            <ul className={s.statistics}>\n              {sortResults.map(({ pageAmount, dateTime }, index) => (\n                <li className={s.item} key={index}>\n                  <p className={s.day}>\n                    {new Date(dateTime).toLocaleDateString()}\n                  </p>\n                  <p className={s.time}>\n                    {new Date(dateTime).toLocaleTimeString()}\n                  </p>\n                  <p>\n                    {pageAmount}\n                    <span className={s.pages}>{t('statistics.pages')}</span>\n                  </p>\n                </li>\n              ))}\n            </ul>\n          </Form>\n        )}\n      </Formik>\n      <DoingFineModal open={doingFineModal} onClose={closeDoingFineModal} />\n    </>\n  );\n};\n\nAddResult.propTypes = {\n  data: PropTypes.shape({\n    readStatistics: PropTypes.arrayOf(PropTypes.object),\n    goalPerDay: PropTypes.number.isRequired,\n    startDate: PropTypes.string.isRequired,\n    finishDate: PropTypes.string.isRequired,\n  }),\n  isTrainingExecuted: PropTypes.bool,\n  updateResult: PropTypes.func.isRequired,\n};\n\nexport default AddResult;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBox\":\"StatisticsList_tableBox__kTxD5\",\"titleBookWrapper\":\"StatisticsList_titleBookWrapper__p-OL2\",\"titleBook\":\"StatisticsList_titleBook__qk8CW\",\"checkBoxWrapper\":\"StatisticsList_checkBoxWrapper__PsAm6\",\"icon\":\"StatisticsList_icon__AYGpy\",\"table\":\"StatisticsList_table__Kz8ZO\",\"tableTitleCell\":\"StatisticsList_tableTitleCell__2d-Rt\",\"tableTBody\":\"StatisticsList_tableTBody__0rR1D\",\"styleCheckBox\":\"StatisticsList_styleCheckBox__5p7ub\",\"styleTitleBook\":\"StatisticsList_styleTitleBook__pvJpC\",\"styleAuthor\":\"StatisticsList_styleAuthor__Wyjwz\",\"styleColums\":\"StatisticsList_styleColums__2ezbV\"};","import Checkbox from '@mui/material/Checkbox';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport {\n  createColumnHelper,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { grey, orange } from '@mui/material/colors';\nimport stringMax from 'helpers/stringMax';\nimport s from './StatisticsList.module.css';\n\nconst StatisticsList = ({ books }) => {\n  const { t } = useTranslation();\n\n  const data = books;\n  const columnHelper = createColumnHelper(books);\n\n  const columns = [\n    columnHelper.accessor('alreadyFinished', {\n      cell: info => (\n        <i>\n          <Checkbox\n            checked={info.getValue()}\n            sx={{\n              '& .MuiSvgIcon-root': { fontSize: 15 },\n              color: grey[500],\n              '&.Mui-checked': {\n                color: orange[800],\n              },\n            }}\n            onClick={e => {\n              e.preventDefault();\n              return false;\n            }}\n          />\n        </i>\n      ),\n      header: () => (\n        <div>\n          <span>{t('library.title')}</span>\n        </div>\n      ),\n    }),\n    columnHelper.accessor('bookTitle', {\n      cell: info => (\n        <i>\n          <div className={s.titleBookWrapper}>\n            <div className={s.titleBook}>{stringMax(info.getValue(), 50)}</div>\n          </div>\n        </i>\n      ),\n      header: () => <div></div>,\n    }),\n    columnHelper.accessor('author', {\n      id: 'author',\n      cell: info => info.getValue(),\n      header: () => <span>{t('library.author')}</span>,\n    }),\n    columnHelper.accessor('publicationDate', {\n      header: () => <span>{t('library.year')}</span>,\n      cell: info => info.renderValue(),\n    }),\n    columnHelper.accessor('amountOfPages', {\n      cell: info => info.getValue(),\n      header: () => <span>{t('library.pages')}</span>,\n    }),\n  ];\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <>\n      <div className={s.tableBox}>\n        <table className={s.table}>\n          <colgroup>\n            <col span=\"1\" className={s.styleCheckBox} />\n            <col span=\"1\" className={s.styleTitleBook} />\n            <col span=\"1\" className={s.styleAuthor} />\n            <col span=\"2\" className={s.styleColums} />\n          </colgroup>\n\n          <thead>\n            {table.getHeaderGroups().map(headerGroup => (\n              <tr key={headerGroup.id}>\n                {headerGroup.headers.map(header => (\n                  <th key={header.id} className={s.tableTitleCell}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody className={s.tableTBody}>\n            {table.getRowModel().rows.map(row => (\n              <tr key={row.id} className={s.tableRow}>\n                {row.getVisibleCells().map(cell => (\n                  <td key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div />\n      </div>\n    </>\n  );\n};\n\nStatisticsList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      bookTitle: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      publicationDate: PropTypes.number.isRequired,\n      amountOfPages: PropTypes.number.isRequired,\n      status: PropTypes.string.isRequired,\n      rating: PropTypes.number,\n      review: PropTypes.string,\n    })\n  ),\n};\n\nexport default StatisticsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"booksMobilesection\":\"StatisticsListMobile_booksMobilesection__F3EDC\",\"checkBoxWrapper\":\"StatisticsListMobile_checkBoxWrapper__k2IDz\",\"cardBook\":\"StatisticsListMobile_cardBook__oNEdj\",\"cardBookWrapper\":\"StatisticsListMobile_cardBookWrapper__WaVfw\",\"cardTableBody\":\"StatisticsListMobile_cardTableBody__WzS4Z\",\"tableTitle\":\"StatisticsListMobile_tableTitle__rRBid\",\"tableContent\":\"StatisticsListMobile_tableContent__oB7Xi\"};","import Checkbox from '@mui/material/Checkbox';\nimport { grey, orange } from '@mui/material/colors';\nimport PropTypes from 'prop-types';\nimport s from './StatisticsListMobile.module.css';\n\nconst StatisticsListMobile = ({ books }) => {\n  return (\n    <>\n      <section className={s.booksMobilesection}>\n        <ul className={s.card}>\n          {books?.map(\n            ({\n              _id,\n              bookTitle,\n              author,\n              alreadyFinished,\n              amountOfPages,\n              publicationDate,\n            }) => {\n              return (\n                <li className={s.cardBook} key={_id}>\n                  <div className={s.checkBoxWrapper}>\n                    <Checkbox\n                      checked={alreadyFinished}\n                      name={_id}\n                      sx={{\n                        '& .MuiSvgIcon-root': { fontSize: 15 },\n                        color: grey[500],\n                        '&.Mui-checked': {\n                          color: orange[800],\n                        },\n                      }}\n                      onClick={e => {\n                        e.preventDefault();\n                        return false;\n                      }}\n                    />\n                  </div>\n                  <div className={s.cardBookWrapper}>\n                    <h3 className={s.cardTitle}>{bookTitle}</h3>\n\n                    <table className={s.cardTable}>\n                      <tbody>\n                        <tr className={s.cardTableBody}>\n                          <th className={s.tableTitle}>Author:</th>\n                          <td className={s.tableContent}>{author}</td>\n                        </tr>\n                        <tr className={s.cardTableBody}>\n                          <th className={s.tableTitle}>Year:</th>\n                          <td className={s.tableContent}>{publicationDate}</td>\n                        </tr>\n                        <tr className={s.cardTableBody}>\n                          <th className={s.tableTitle}>Pages:</th>\n                          <td className={s.tableContent}>{amountOfPages}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nStatisticsListMobile.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      bookTitle: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      publicationDate: PropTypes.number.isRequired,\n      amountOfPages: PropTypes.number.isRequired,\n      status: PropTypes.string.isRequired,\n      rating: PropTypes.number,\n      review: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default StatisticsListMobile;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TrainingExecutedModal_wrapper__+K-Zi\",\"wrapper_svg\":\"TrainingExecutedModal_wrapper_svg__e03MA\",\"wrapper_text\":\"TrainingExecutedModal_wrapper_text__KaKml\",\"buttons\":\"TrainingExecutedModal_buttons__bqRmK\"};","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Modal from '../../Modal/Modal';\nimport Button from '../../Button/Button';\nimport sprite from '../DoingFineModal/sprite.svg';\nimport s from './TrainingExecutedModal.module.css';\n\nconst TrainingExecutedModal = ({ isLoading, handleCloseOfTraining }) => {\n  const [open, setOpen] = useState(true);\n  const handleClose = () => setOpen(false);\n  const { t } = useTranslation();\n\n  return (\n    <Modal onClose={handleClose} open={open}>\n      <div className={s.wrapper}>\n        <svg className={s.wrapper_svg}>\n          <use href={`${sprite}#icon-thumb_up`} />\n        </svg>\n        <p className={s.wrapper_text}>{t('modal.congratulations')}</p>\n\n        <div className={s.buttons}>\n          <Button\n            className=\"main\"\n            text={t('modal.newTraining')}\n            onClick={() => handleCloseOfTraining()}\n            disabled={isLoading}\n          />\n          <Button\n            className=\"transparent\"\n            tabIndex={0}\n            autoFocus={true}\n            text={t('modal.back')}\n            onClick={handleClose}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nTrainingExecutedModal.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  handleCloseOfTraining: PropTypes.func.isRequired,\n  onClose: PropTypes.func,\n};\n\nexport default TrainingExecutedModal;\n","const calculateStatistics = readStatistics => {\n  const uniqueDatesOfReading = [\n    ...new Set(readStatistics.map(item => item.dateTime.slice(0, 10))),\n  ];\n\n  const result = uniqueDatesOfReading.map(date => {\n    return {\n      date: date,\n      pageAmount: readStatistics\n        .filter(stat => stat.dateTime.slice(0, 10) === date)\n        .reduce(\n          (totalSum, stat) => (totalSum += Number.parseInt(stat.pageAmount)),\n          0\n        ),\n    };\n  });\n  return result ?? [];\n};\n\nexport default calculateStatistics;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionStatistic\":\"StatisticView_sectionStatistic__tz8xw\",\"sectionStatisticTraining\":\"StatisticView_sectionStatisticTraining__F-ixF\",\"myGoals\":\"StatisticView_myGoals__kuzzj\",\"statistics\":\"StatisticView_statistics__3pyfn\",\"statisticsWrapper\":\"StatisticView_statisticsWrapper__JebJb\",\"leftWrapper\":\"StatisticView_leftWrapper__XlUj4\",\"sectionMuGoals\":\"StatisticView_sectionMuGoals__AId6J\"};","import {\n  useDeleteTrainingMutation,\n  useFetchTrainingQuery,\n  useEditTrainingMutation,\n} from '../../redux/training/trainingApi';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport CountdownTimers from 'components/CountdownTimers';\nimport MyGoals from 'components/MyGoals';\nimport AddResult from 'components/AddResult/AddResult';\nimport Progress from 'components/Progress/Progress';\nimport StatisticsList from 'components/StatisticsList/StatisticsList';\nimport StatisticsListMobile from 'components/StatisticsList/StatisticsListMobile';\nimport { Chart } from 'components/Chart/Chart';\nimport TrainingExecutedModal from 'components/modals/TrainingExecutedModal/TrainingExecutedModal';\nimport { useEditBookMutation } from 'redux/books/booksApi';\nimport getTrainingDaysAmount from 'helpers/getTrainingDaysAmount';\nimport useIsMobile from 'helpers/useIsMobile';\nimport calculateStatistics from 'services/calculateStatistics';\nimport s from './StatisticView.module.css';\n\nconst findAlreadyReadBook = (books, alreadyReadPages) => {\n  let readPagesLeft = alreadyReadPages;\n  const result = books.map(book => {\n    return { ...book, alreadyFinished: false };\n  });\n  for (let i = 0; i < result.length; i += 1) {\n    if (result[i].amountOfPages <= readPagesLeft) {\n      result[i].alreadyFinished = true;\n    }\n    readPagesLeft = readPagesLeft - result[i].amountOfPages;\n  }\n  return result;\n};\n\nconst StatisticView = () => {\n  const isMobile = useIsMobile();\n  const { data: userTraining, isLoading: isFetchingTraining } =\n    useFetchTrainingQuery();\n\n  const [deleteTraining, { isLoading }] = useDeleteTrainingMutation();\n\n  const [editBook] = useEditBookMutation();\n\n  const navigate = useNavigate();\n\n  const [currentTraining, setCurrentTraining] = useState(null);\n\n  const [updateResult] = useEditTrainingMutation();\n\n  const isTrainingExecuted =\n    currentTraining?.alreadyReadPages >= currentTraining?.trainingPagesAmount ??\n    false;\n\n  useEffect(() => {\n    if (!userTraining) {\n      navigate('/training');\n    } else {\n      const changeBookStatusToFinished = booksToChange => {\n        booksToChange.forEach(book => {\n          editBook({\n            ...book,\n            id: book._id,\n            status: 'finished',\n          });\n        });\n      };\n      const { startDate, finishDate, books, readStatistics, _id } =\n        userTraining;\n      const trainingDaysAmount = getTrainingDaysAmount(startDate, finishDate);\n      const trainingPagesAmount =\n        books.reduce((currentValue, book) => {\n          return (currentValue += Number.parseInt(book.amountOfPages));\n        }, 0) ?? 0;\n      const alreadyReadPages = userTraining.readStatistics.reduce(\n        (prevVal, stat) => (prevVal += Number.parseInt(stat.pageAmount)),\n        0\n      );\n      const booksWithCurrentStatus = findAlreadyReadBook(\n        books,\n        alreadyReadPages\n      );\n      const notFinishedBooksAmount = booksWithCurrentStatus.filter(\n        book => !book.alreadyFinished\n      ).length;\n      setCurrentTraining(prevState => ({\n        _id,\n        startDate,\n        finishDate,\n        readStatistics,\n        trainingDaysAmount,\n        trainingPagesAmount,\n        goalPerDay: Math.round(trainingPagesAmount / trainingDaysAmount),\n        alreadyReadPages,\n        books: booksWithCurrentStatus,\n        notFinishedBooksAmount,\n        userHadReadNewBook:\n          notFinishedBooksAmount < prevState?.notFinishedBooksAmount,\n      }));\n      changeBookStatusToFinished(\n        booksWithCurrentStatus.filter(\n          book => book.status !== 'finished' && book.alreadyFinished\n        )\n      );\n    }\n  }, [editBook, navigate, userTraining]);\n\n  const handleCloseOfTraining = () => {\n    deleteTraining(userTraining._id);\n  };\n\n  return isFetchingTraining ? (\n    <Progress />\n  ) : (\n    currentTraining && (\n      <>\n        <section className={s.sectionStatisticTraining}>\n          <div className={s.statisticsWrapper}>\n              <CountdownTimers targetDate={currentTraining.finishDate} />\n              <div className={s.sectionMuGoals}>\n\n            <MyGoals\n              bookAmount={currentTraining.books.length}\n              daysAmount={currentTraining.trainingDaysAmount}\n              booksLeft={currentTraining.notFinishedBooksAmount}\n              showBooksLeft={true}\n              />\n              </div>\n            {isMobile ? (\n              <StatisticsListMobile books={currentTraining.books} />\n            ) : (\n              <StatisticsList books={currentTraining.books} />\n            )}\n          </div>\n        </section>\n        <section className={s.sectionStatistic}>\n          <div className={s.statistics}>\n            <div className={s.leftWrapper}>\n              <Chart\n                plan={currentTraining.goalPerDay}\n                readingStatistics={calculateStatistics(\n                  currentTraining.readStatistics ?? []\n                )}\n              />\n            </div>\n            <AddResult data={currentTraining} updateResult={updateResult} />\n          </div>\n        </section>\n        {isTrainingExecuted && (\n          <TrainingExecutedModal\n            handleCloseOfTraining={handleCloseOfTraining}\n            isLoading={isLoading}\n          />\n        )}{' '}\n      </>\n    )\n  );\n};\n\nexport default StatisticView;\n"],"names":["className","type","text","onClick","disabled","tabIndex","autoFocus","s","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","customLegend","t","legend","id","afterDraw","chart","args","options","x","y","_metasets","ctx","font","textBaseLine","textAlign","forEach","meta","fillStyle","_dataset","borderColor","data","length","label","fillText","chartArea","height","Chart","plan","readingStatistics","useTranslation","dates","map","stat","date","pages","pageAmount","actPages","maxPagesValue","Math","max","labels","maxChartValue","responsive","maintainAspectRatio","layout","padding","bottom","plugins","display","scales","ticks","min","grid","datasets","item","backgroundColor","pointBorderColor","pointBorderWidth","push","tension","open","onClose","children","modalRef","useRef","document","getElementById","useEffect","handleClose","e","code","window","addEventListener","removeEventListener","createPortal","styles","currentTarget","target","current","TwoGoals","header","amount","ThreeGoals","bookAmount","daysAmount","booksLeft","showBooksLeft","container","allGoals","startDate","finishDate","round","Date","string","stringLength","stringStrip","split","filter","word","join","subStringStrip","substring","lastIndexOf","getIsMobile","innerWidth","useState","isMobile","setIsMobile","onResize","useCountdown","targetDate","countDownDate","getTime","countDown","setCountDown","interval","setInterval","clearInterval","getReturnValues","floor","DateTimeDisplay","value","slice","minTwoDigits","ShowCounter","days","hours","minutes","seconds","parse","getFullYear","daysUntilNextYear","hoursUntilNextYear","minutesUntilNextYear","secondsUntilNextYear","daysUntilTargetDate","hoursUntilTargetDate","minutesUntilTargetDate","secondsUntilTargetDate","props","setFieldValue","useFormikContext","useField","field","selected","onChange","val","name","Modal","href","sprite","Button","updateResult","goalPerDay","results","readStatistics","alreadyReadPages","isTrainingExecuted","trainingPagesAmount","doingFineModal","setDoingFineModal","sortResults","sort","a","b","dateTime","schema","yup","shape","integer","positive","required","typeError","initialValues","validationSchema","onSubmit","values","actions","trainingId","_id","resetForm","isValid","DatePicker","minDate","maxDate","dateFormat","placeholderText","autoComplete","readonly","style","width","index","toLocaleDateString","toLocaleTimeString","books","columnHelper","createColumnHelper","columns","accessor","cell","info","Checkbox","checked","getValue","sx","fontSize","color","grey","orange","preventDefault","stringMax","renderValue","table","useReactTable","getCoreRowModel","span","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","column","columnDef","getContext","getRowModel","rows","row","getVisibleCells","bookTitle","author","alreadyFinished","amountOfPages","publicationDate","isLoading","handleCloseOfTraining","setOpen","result","Set","reduce","totalSum","Number","parseInt","useIsMobile","useFetchTrainingQuery","userTraining","isFetchingTraining","useDeleteTrainingMutation","deleteTraining","useEditBookMutation","editBook","navigate","useNavigate","currentTraining","setCurrentTraining","useEditTrainingMutation","trainingDaysAmount","getTrainingDaysAmount","currentValue","book","prevVal","booksWithCurrentStatus","readPagesLeft","i","findAlreadyReadBook","notFinishedBooksAmount","prevState","userHadReadNewBook","status","Progress","MyGoals","calculateStatistics"],"sourceRoot":""}